name: Sync Secrets

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to sync secrets to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview
          - development

jobs:
  sync-secrets:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get secrets from Key Vault
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "retail-insights-kv"
          secrets: |
            supabase-url
            supabase-anon-key
            supabase-service-role-key
            azure-openai-endpoint
            azure-openai-key
            azure-openai-deployment
            sentry-dsn
            vercel-token
        id: keyvault

      - name: Install Vercel CLI
        run: npm i -g vercel

      - name: Sync to Vercel Environment
        run: |
          # Set environment variables in Vercel
          echo "${{ steps.keyvault.outputs.supabase-url }}" | vercel env add VITE_SUPABASE_URL ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes
          echo "${{ steps.keyvault.outputs.supabase-anon-key }}" | vercel env add VITE_SUPABASE_ANON_KEY ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes
          echo "${{ steps.keyvault.outputs.azure-openai-endpoint }}" | vercel env add AZURE_OPENAI_ENDPOINT ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes
          echo "${{ steps.keyvault.outputs.azure-openai-key }}" | vercel env add AZURE_OPENAI_API_KEY ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes
          echo "${{ steps.keyvault.outputs.azure-openai-deployment }}" | vercel env add AZURE_OPENAI_DEPLOYMENT_NAME ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes
          echo "${{ steps.keyvault.outputs.sentry-dsn }}" | vercel env add VITE_SENTRY_DSN ${{ github.event.inputs.environment || 'production' }} --token=${{ steps.keyvault.outputs.vercel-token }} --yes

      - name: Deploy to Vercel
        run: |
          vercel --prod --token=${{ steps.keyvault.outputs.vercel-token }} 