name: Visual Documentation on Task Completion

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

jobs:
  capture-visuals:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'feat:') ||
      contains(github.event.head_commit.message, 'fix:') ||
      contains(github.event.head_commit.message, 'DONE:') ||
      contains(github.event.head_commit.message, 'âœ…') ||
      contains(github.event.head_commit.message, 'closes #')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Clear npm cache and install dependencies
        run: |
          npm cache clean --force
          npm install --force --no-optional
        
      - name: Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Start preview server
        run: |
          npm run preview &
          npx wait-on http://localhost:4173 --timeout 60000
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        
      - name: Capture visual documentation
        run: npm run capture:visuals
        env:
          GITHUB_SHA: ${{ github.sha }}
          COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
        
      - name: Upload visual artifacts
        uses: actions/upload-artifact@v4
        with:
          name: visual-documentation-${{ github.sha }}
          path: visual-docs/
          retention-days: 30
          
      - name: Comment PR with visuals
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            if (!fs.existsSync('./visual-docs')) return;
            
            const screenshots = fs.readdirSync('./visual-docs')
              .filter(file => file.endsWith('.png'));
            
            if (screenshots.length === 0) return;
            
            let comment = '## ðŸ“¸ Visual Documentation\n\n';
            comment += `**Commit:** \`${{ github.sha }}\`\n`;
            comment += `**Message:** ${{ github.event.head_commit.message }}\n\n`;
            
            comment += '### Screenshots\n\n';
            
            // Create a download link for the artifacts
            comment += '**[ðŸ“¦ Download All Screenshots](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})**\n\n';
            
            screenshots.forEach(file => {
              const name = file.replace('.png', '').replace(/-/g, ' ');
              comment += `#### ${name}\n`;
              comment += `![${name}](https://github.com/${{ github.repository }}/blob/${{ github.sha }}/visual-docs/${file}?raw=true)\n\n`;
            });
            
            comment += '---\n*Visual documentation generated automatically by GitHub Actions*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Commit visual docs to repository
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -d "visual-docs" ] && [ "$(ls -A visual-docs)" ]; then
            git add visual-docs/
            git commit -m "docs: add visual documentation for ${{ github.sha }}" || exit 0
            git push
          fi