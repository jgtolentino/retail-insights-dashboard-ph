[
  {
    "file": "src/utils/safety.ts",
    "line": 15,
    "issue": "Array.from without null check",
    "code": "return Array.from(value);",
    "match": "Array.from(value)",
    "fix": "Array.from(value || [])"
  },
  {
    "file": "src/utils/safety.ts",
    "line": 162,
    "issue": "Array.from without null check",
    "code": "if (value instanceof Set) return Array.from(value);",
    "match": "Array.from(value)",
    "fix": "Array.from(value || [])"
  },
  {
    "file": "src/utils/safeArray.ts",
    "line": 7,
    "issue": "Array.from without null check",
    "code": "if (value instanceof Set) return Array.from(value);",
    "match": "Array.from(value)",
    "fix": "Array.from(value || [])"
  },
  {
    "file": "src/utils/safeArray.ts",
    "line": 10,
    "issue": "Array.from without null check",
    "code": "return Array.from(value);",
    "match": "Array.from(value)",
    "fix": "Array.from(value || [])"
  },
  {
    "file": "src/components/charts/PurchasePatterns.tsx",
    "line": 46,
    "issue": "Array.from without null check",
    "code": "const mockHourlyData = Array.from({ length: 24 }, (_, hour) => ({",
    "match": "Array.from({ length: 24 }, (_, hour)",
    "fix": "Array.from({ length: 24 }, (_, hour || [])"
  },
  {
    "file": "src/services/dashboard.ts",
    "line": 155,
    "issue": "Array.from without null check",
    "code": "const topBrands = Array.from(brandSalesMap.entries())",
    "match": "Array.from(brandSalesMap.entries()",
    "fix": "Array.from(brandSalesMap.entries( || [])"
  },
  {
    "file": "src/services/dashboard.ts",
    "line": 271,
    "issue": "Array.from without null check",
    "code": "const timeSeriesData = Array.from(timeSeriesMap.entries())",
    "match": "Array.from(timeSeriesMap.entries()",
    "fix": "Array.from(timeSeriesMap.entries( || [])"
  },
  {
    "file": "src/services/productMix.ts",
    "line": 202,
    "issue": "Array.from without null check",
    "code": "const sortedItems = Array.from(revenueMap.entries())",
    "match": "Array.from(revenueMap.entries()",
    "fix": "Array.from(revenueMap.entries( || [])"
  },
  {
    "file": "src/services/productMix.ts",
    "line": 286,
    "issue": "Array.from without null check",
    "code": "return Array.from(categoryMap.entries()).map(([category, data]) => ({",
    "match": "Array.from(categoryMap.entries()",
    "fix": "Array.from(categoryMap.entries( || [])"
  }
]