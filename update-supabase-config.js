#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('\nüöÄ Supabase Configuration Updater\n');

// Check if credentials are provided as arguments
const args = process.argv.slice(2);
if (args.length !== 2) {
  console.log('Usage: node update-supabase-config.js <SUPABASE_URL> <SUPABASE_ANON_KEY>');
  console.log('\nExample:');
  console.log('node update-supabase-config.js https://abc123.supabase.co eyJhbGciOiJIUzI1NiIs...\n');
  process.exit(1);
}

const [supabaseUrl, supabaseKey] = args;

// Validate URL format
if (!supabaseUrl.includes('.supabase.co')) {
  console.error('‚ùå Invalid Supabase URL. It should look like: https://xxxxx.supabase.co');
  process.exit(1);
}

// Validate key format
if (!supabaseKey.startsWith('eyJ')) {
  console.error('‚ùå Invalid Supabase anon key. It should start with "eyJ"');
  process.exit(1);
}

// Update the client.ts file
const clientPath = path.join(__dirname, 'src/integrations/supabase/client.ts');
const clientContent = `// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "${supabaseUrl}";
const SUPABASE_PUBLISHABLE_KEY = "${supabaseKey}";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);`;

fs.writeFileSync(clientPath, clientContent);

console.log('‚úÖ Updated src/integrations/supabase/client.ts');
console.log(`   URL: ${supabaseUrl}`);
console.log(`   Key: ${supabaseKey.substring(0, 20)}...`);
console.log('\nüìù Next steps:');
console.log('1. Go to your Supabase dashboard SQL editor');
console.log('2. Copy and run the contents of: supabase/setup_scoutdb.sql');
console.log('3. Refresh your dashboard at http://localhost:8082');
console.log('\n‚ú® Done!');